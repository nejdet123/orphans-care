<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <title>لوحة التحكم | تقييم الاحتياجات</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <style>
    body {
      background-color: #1e1e2f;
      color: #f8f9fa;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .sidebar {
      width: 220px;
      height: 100vh;
      position: fixed;
      top: 0;
      right: 0;
      background-color: #12121c;
      padding-top: 60px;
      border-left: 1px solid #333;
    }
    .sidebar a {
      display: block;
      padding: 15px 20px;
      color: #f8f9fa;
      text-decoration: none;
      transition: 0.3s;
    }
    .sidebar a:hover {
      background-color: #343a40;
    }
    .topbar {
      height: 60px;
      background-color: #1c1c2b;
      padding: 10px 30px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid #333;
      margin-right: 220px;
    }
    .main {
      margin-right: 240px;
      padding: 30px;
    }
    .card-dark {
      background-color: #2c2c3d;
      border: none;
      border-radius: 12px;
    }
    .form-select, .form-control {
      background-color: #343a40;
      color: #fff;
      border: 1px solid #555;
    }
    .form-select:focus, .form-control:focus {
      box-shadow: 0 0 0 0.2rem rgba(13, 202, 240, 0.25);
    }
    table {
      background-color: #2c2c3d;
    }
    th, td {
      color: #f8f9fa;
      vertical-align: middle;
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="sidebar">
    <a href="/"><i class="bi bi-house"></i> الرئيسية</a>
    <a href="#stats"><i class="bi bi-bar-chart"></i> الإحصاءات العامة</a>
    <a href="#report"><i class="bi bi-file-earmark-text"></i> التقارير</a>
    <a href="#settings"><i class="bi bi-gear"></i> الإعدادات</a>
    <a href="/auth/logout"><i class="bi bi-box-arrow-left"></i> تسجيل الخروج</a>
  </div>

  <div class="topbar">
    <div><strong>📊 لوحة التحكم - تقييم الاحتياجات</strong></div>
    <div>👤 <span id="userName">اسم المستخدم</span></div>
  </div>

  <div class="main">
    <h2 class="mb-4">الإحصاءات العامة</h2>

    <!-- الفلاتر -->
    <div class="row g-3 mb-4">
      <div class="col-md-3">
        <label for="filterOrganization" class="form-label">المنظمة</label>
        <select id="filterOrganization" class="form-select form-select-sm"></select>
      </div>
      <div class="col-md-3">
        <label for="filterCode" class="form-label">رمز المنظمة</label>
        <input type="text" id="filterCode" class="form-control form-control-sm">
      </div>
      <div class="col-md-3">
        <label for="filterAge" class="form-label">الفئة العمرية</label>
        <select id="filterAge" class="form-select form-select-sm">
          <option value="">الكل</option>
          <option value="6-12">6-12</option>
          <option value="13-18">13-18</option>
          <option value=">18">أكبر من 18</option>
        </select>
      </div>
      <div class="col-md-3">
        <label for="filterTraining" class="form-label">تلقى تدريبًا سابقًا</label>
        <select id="filterTraining" class="form-select form-select-sm">
          <option value="">الكل</option>
          <option value="نعم">نعم</option>
          <option value="لا">لا</option>
        </select>
      </div>
    </div>

    <!-- الكروت -->
    <div class="row mb-4">
      <div class="col-md-4">
        <div class="card card-dark p-3">
          <h6><i class="bi bi-people"></i> عدد المشاركين</h6>
          <h3 id="totalParticipants">--</h3>
        </div>
      </div>
      <div class="col-md-4">
        <div class="card card-dark p-3">
          <h6><i class="bi bi-building"></i> عدد المنظمات</h6>
          <h3 id="totalOrganizations">--</h3>
        </div>
      </div>
      <div class="col-md-4">
        <div class="card card-dark p-3">
          <h6><i class="bi bi-person-check"></i> نسبة تلقوا تدريبًا سابقًا</h6>
          <h3 id="previousTrainingPercentage">--</h3>
        </div>
      </div>
    </div>

    <!-- الرسم البياني -->
    <div class="card card-dark p-4 mb-5">
      <canvas id="domainsChart"></canvas>
    </div>

    <!-- جدول تفصيلي -->
    <div class="mb-5">
      <h4 class="mb-3">📋 بيانات المشاركين</h4>
      <button class="btn btn-sm btn-outline-info mb-3" onclick="exportTableToExcel('participantsTable')">تصدير الجدول إلى Excel</button>
      <div class="table-responsive">
        <table class="table table-bordered" id="participantsTable">
          <thead>
            <tr>
              <th>اسم المنظمة</th>
              <th>رمز</th>
              <th>العمر</th>
              <th>تلقى تدريب</th>
              <th>متوسط التقييم</th>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
  <script>
    let allData = [];

    function applyFilters() {
      const org = document.getElementById('filterOrganization').value;
      const code = document.getElementById('filterCode').value.toLowerCase();
      const age = document.getElementById('filterAge').value;
      const training = document.getElementById('filterTraining').value;

      const filtered = allData.filter(row => {
        return (!org || row.organization === org) &&
               (!code || row.code?.toLowerCase().includes(code)) &&
               (!age || row.age === age) &&
               (!training || row.previousTraining === training);
      });

      renderDashboard(filtered);
    }

    function renderDashboard(data) {
      document.getElementById("totalParticipants").textContent = data.length;
      const orgs = [...new Set(data.map(item => item.organization))];
      document.getElementById("totalOrganizations").textContent = orgs.length;

      const trainedCount = data.filter(d => d.previousTraining === "نعم").length;
      const trainingPercentage = ((trainedCount / data.length) * 100).toFixed(1);
      document.getElementById("previousTrainingPercentage").textContent = isNaN(trainingPercentage) ? '--' : trainingPercentage + "%";

      const ctx = document.getElementById("domainsChart").getContext('2d');
      if (window.myChart) window.myChart.destroy();

      const domainLabels = Object.keys(data[0]?.domains || {});
      const domainAverages = domainLabels.map(label => {
        const sum = data.reduce((acc, item) => acc + (item.domains?.[label] || 0), 0);
        return (sum / data.length).toFixed(1);
      });

      window.myChart = new Chart(ctx, {
        type: "bar",
        data: {
          labels: domainLabels,
          datasets: [{ label: "متوسط التقييم", data: domainAverages }]
        },
        options: { scales: { y: { beginAtZero: true, max: 5 } } }
      });

      const tbody = document.querySelector("#participantsTable tbody");
      tbody.innerHTML = "";
      data.forEach(row => {
        const avg = domainLabels.reduce((acc, l) => acc + (row.domains?.[l] || 0), 0) / domainLabels.length;
        tbody.innerHTML += `
          <tr>
            <td>${row.organization}</td>
            <td>${row.code || ''}</td>
            <td>${row.age || ''}</td>
            <td>${row.previousTraining || ''}</td>
            <td>${isNaN(avg) ? '--' : avg.toFixed(1)}</td>
          </tr>
        `;
      });
    }

    async function fetchSurveyData() {
      const res = await fetch("/api/survey-data");
      allData = await res.json();

      const orgSelect = document.getElementById("filterOrganization");
      [...new Set(allData.map(r => r.organization))].forEach(org => {
        const opt = document.createElement("option");
        opt.value = org;
        opt.textContent = org;
        orgSelect.appendChild(opt);
      });

      renderDashboard(allData);
    }

    function exportTableToExcel(tableID) {
      const wb = XLSX.utils.table_to_book(document.getElementById(tableID), {sheet:"بيانات"});
      XLSX.writeFile(wb, 'participants.xlsx');
    }

    document.addEventListener('DOMContentLoaded', () => {
      fetchSurveyData();
      ["filterOrganization", "filterCode", "filterAge", "filterTraining"].forEach(id => {
        document.getElementById(id).addEventListener("change", applyFilters);
        if (id === "filterCode") document.getElementById(id).addEventListener("input", applyFilters);
      });
    });
  </script>
</body>
</html>

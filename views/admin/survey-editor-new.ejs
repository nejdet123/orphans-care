<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>إدارة الاستبيان - النسخة الجديدة</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css" rel="stylesheet" />
  <style>
    body {
      background: #f5f7fa;
      font-family: 'Segoe UI', sans-serif;
      padding: 2rem;
    }
    .section-box {
      background: #fff;
      border-radius: 1rem;
      padding: 1.5rem;
      margin-bottom: 2rem;
      box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }
    .question-box {
      background: #f8f9fa;
      padding: 1rem;
      border-radius: 0.5rem;
      margin-bottom: 1rem;
      border: 1px solid #dee2e6;
    }
  </style>
</head>
<body>

<div class="container">
  <h2 class="text-center mb-4 text-primary">🔥 survey-editor - هذه النسخة الجديدة ✅</h2>

  <div id="sectionsContainer">
    <div class="text-center text-muted">...جارٍ تحميل الأسئلة</div>
  </div>

  <div class="text-center mt-4">
    <button class="btn btn-outline-primary" onclick="addSection()">➕ إضافة قسم جديد</button>
    <button class="btn btn-success px-4 mx-3" onclick="saveSurvey()">💾 حفظ التعديلات</button>
  </div>
</div>

<script>
let surveyData = []

async function loadSurvey() {
  try {
    const res = await fetch('/admin/api/survey-template');
    const result = await res.json();
    console.log("📦 رد السيرفر كامل:", result);

    const sections = result?.data?.structure?.survey?.sections;
    if (!sections || !Array.isArray(sections)) {
      throw new Error("❌ لم يتم العثور على الأقسام داخل القالب");
    }

    surveyData = sections;
    renderSections();
  } catch (error) {
    console.error("❌ فشل في تحميل القالب:", error);
    document.getElementById('sectionsContainer').innerHTML = `<div class="alert alert-danger text-center">فشل في تحميل الاستبيان</div>`;
  }
}

function renderSections() {
  const container = document.getElementById("sectionsContainer");
  container.innerHTML = "";

  surveyData.forEach((section, sIndex) => {
    const sec = document.createElement('div');
    sec.className = 'section-box';
    sec.innerHTML = `
      <div class="mb-3 d-flex justify-content-between align-items-center">
        <input class="form-control form-control-sm w-75" value="${section.title || ''}" onchange="updateSectionTitle(${sIndex}, this.value)">
        <button class="btn btn-sm btn-danger" onclick="deleteSection(${sIndex})">🗑 حذف القسم</button>
      </div>
      <div id="section-${sIndex}-questions"></div>
      <button class="btn btn-sm btn-outline-secondary mt-2" onclick="addQuestion(${sIndex})">➕ إضافة سؤال</button>
    `;
    container.appendChild(sec);

    const qContainer = sec.querySelector(`#section-${sIndex}-questions`);
    section.questions?.forEach((q, qIndex) => {
      const qBox = document.createElement('div');
      qBox.className = 'question-box';
      qBox.innerHTML = `
        <input class="form-control form-control-sm mb-2" placeholder="نص السؤال" value="${q.text || ''}" onchange="surveyData[${sIndex}].questions[${qIndex}].text = this.value">
        <select class="form-select form-select-sm mb-2" onchange="surveyData[${sIndex}].questions[${qIndex}].type = this.value">
          <option value="text" ${q.type === 'text' ? 'selected' : ''}>نص</option>
          <option value="radio" ${q.type === 'radio' ? 'selected' : ''}>اختيار واحد</option>
          <option value="checkbox" ${q.type === 'checkbox' ? 'selected' : ''}>اختيارات متعددة</option>
          <option value="textarea" ${q.type === 'textarea' ? 'selected' : ''}>نص طويل</option>
        </select>
        <input class="form-control form-control-sm mb-2" placeholder="معرف السؤال" value="${q.id || ''}" onchange="surveyData[${sIndex}].questions[${qIndex}].id = this.value">
        <button class="btn btn-sm btn-danger" onclick="deleteQuestion(${sIndex}, ${qIndex})">🗑 حذف السؤال</button>
      `;
      qContainer.appendChild(qBox);
    });
  });
}

function updateSectionTitle(index, value) {
  surveyData[index].title = value;
}

function addSection() {
  surveyData.push({ title: 'قسم جديد', questions: [] });
  renderSections();
}

function deleteSection(index) {
  if (confirm("هل أنت متأكد من حذف هذا القسم؟")) {
    surveyData.splice(index, 1);
    renderSections();
  }
}

function addQuestion(sectionIndex) {
  surveyData[sectionIndex].questions.push({ text: '', type: 'text', id: '' });
  renderSections();
}

function deleteQuestion(sIndex, qIndex) {
  surveyData[sIndex].questions.splice(qIndex, 1);
  renderSections();
}

async function saveSurvey() {
  try {
    const res = await fetch('/admin/survey-template', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ sections: surveyData })
    });
    const result = await res.json();
    if (result.success) {
      alert('✅ تم حفظ التعديلات بنجاح');
    } else {
      alert('❌ فشل في الحفظ');
    }
  } catch (err) {
    console.error("❌ خطأ في الحفظ:", err);
    alert('⚠️ حدث خطأ أثناء محاولة حفظ البيانات');
  }
}

loadSurvey();
</script>

</body>
</html>
